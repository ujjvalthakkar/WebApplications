/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Product;
import Business.ProductDirectory;
import Business.VendorDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Ujjval
 */
public class ProductsDisplayJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProductsDisplayJPanel
     */
    private JPanel userProcessContainer;
    private ProductDirectory prodList;
    private VendorDirectory vendorList;
    private String reqdCategory;

    public ProductsDisplayJPanel(JPanel userProcessContainer, ProductDirectory prodList, String category, VendorDirectory vendorList) {
        initComponents();
        this.prodList = prodList;
        this.userProcessContainer = userProcessContainer;
        this.reqdCategory = category;
        this.vendorList = vendorList;
        dropDownVendor.setModel(new DefaultComboBoxModel(vendorList.getVendorList().toArray()));
        dropDownVendor1.setModel(new DefaultComboBoxModel(vendorList.getVendorList().toArray()));
        populateTable(category);
    }

    public void populateTable(String category) {
        DefaultTableModel dtm = (DefaultTableModel) tblDisplayProducts.getModel();
        dtm.setRowCount(0); // Empties the table
        for (Product p : prodList.getProductList()) {
            if (p.getCategory().equals(category)) {
                Object row[] = new Object[4];
                row[0] = p;
                row[1] = p.getVendorName();
                row[2] = p.getBasePrice();
                row[3] = p.getDescStatemnt();
                dtm.addRow(row);
            }
        }
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(dtm);
        tblDisplayProducts.setRowSorter(sorter);
    }

    public void populateSearchTableByCust(ArrayList<Product> prod) {
        DefaultTableModel dtm = (DefaultTableModel) tblDisplayProducts.getModel();
        dtm.setRowCount(0); // Empties the table
        for (Product p : prod) {
            Object row[] = new Object[4];
            row[0] = p;
            row[1] = p.getVendorName();
            row[2] = p.getBasePrice();
            row[3] = p.getDescStatemnt();
            dtm.addRow(row);
        }
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(dtm);
        tblDisplayProducts.setRowSorter(sorter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplayProducts = new javax.swing.JTable();
        btnViewProduct = new javax.swing.JButton();
        btnViewProduct1 = new javax.swing.JButton();
        btnViewProductByNameSearch = new javax.swing.JButton();
        txtViewProductByNameSearch = new javax.swing.JTextField();
        btnViewProductByVendorNameSearch = new javax.swing.JButton();
        dropDownVendor = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dropDownGenericSearch = new javax.swing.JComboBox<>();
        txtGenericSearch = new javax.swing.JTextField();
        dropDownVendor1 = new javax.swing.JComboBox<>();
        lblSelectBrandName = new javax.swing.JLabel();
        btnGenericSearch = new javax.swing.JButton();

        setEnabled(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHeader.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblHeader.setText("Display Products");
        add(lblHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 21, -1, -1));

        tblDisplayProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Brand Name", "Base Price($)", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDisplayProducts);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 56, -1, 213));

        btnViewProduct.setText("View Product");
        btnViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProductActionPerformed(evt);
            }
        });
        add(btnViewProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 300, -1, -1));

        btnViewProduct1.setText("<< Back");
        btnViewProduct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProduct1ActionPerformed(evt);
            }
        });
        add(btnViewProduct1, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 430, -1, -1));

        btnViewProductByNameSearch.setText("View Products by Name>>");
        btnViewProductByNameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProductByNameSearchActionPerformed(evt);
            }
        });
        add(btnViewProductByNameSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 336, -1, -1));
        add(txtViewProductByNameSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 337, 135, -1));

        btnViewProductByVendorNameSearch.setText("View Products by Brand Name>>");
        btnViewProductByVendorNameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProductByVendorNameSearchActionPerformed(evt);
            }
        });
        add(btnViewProductByVendorNameSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 377, -1, -1));

        add(dropDownVendor, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, -1, -1));

        jLabel1.setText("**Click on the Table column name to sort the products as per need!!");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, -1, -1));

        jLabel2.setText("Search By:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, -1, -1));

        dropDownGenericSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Select>", "Product Name", "Product Model", "Product Description Keyword", "Product Benefit Keyword", "Brand Name" }));
        dropDownGenericSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownGenericSearchActionPerformed(evt);
            }
        });
        add(dropDownGenericSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, -1, -1));

        txtGenericSearch.setEnabled(false);
        add(txtGenericSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 340, 160, -1));

        dropDownVendor1.setEnabled(false);
        add(dropDownVendor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 380, -1, -1));

        lblSelectBrandName.setText("Select Brand Name:");
        lblSelectBrandName.setEnabled(false);
        add(lblSelectBrandName, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 380, -1, -1));

        btnGenericSearch.setText("Search");
        btnGenericSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenericSearchActionPerformed(evt);
            }
        });
        add(btnGenericSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 300, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewProduct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProduct1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnViewProduct1ActionPerformed

    private void btnViewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProductActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDisplayProducts.getSelectedRow();
        if (selectedRow >= 0) {
            Product p = (Product) tblDisplayProducts.getValueAt(selectedRow, 0);
            ProductDisplayJPanel panel = new ProductDisplayJPanel(userProcessContainer, p);
            userProcessContainer.add("ProductDisplayJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnViewProductActionPerformed

    private void btnViewProductByNameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProductByNameSearchActionPerformed
        // TODO add your handling code here:
        if (txtViewProductByNameSearch.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter the Product Name!!");
        } else {
            ArrayList<Product> result = prodList.searchProductsByCust(txtViewProductByNameSearch.getText(), reqdCategory);
            if (result.isEmpty()) {
                JOptionPane.showMessageDialog(this, "The Product name does not exists!!", "Information", JOptionPane.INFORMATION_MESSAGE);
            } else {
                populateSearchTableByCust(result);
            }
        }
    }//GEN-LAST:event_btnViewProductByNameSearchActionPerformed

    private void btnViewProductByVendorNameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProductByVendorNameSearchActionPerformed
        // TODO add your handling code here:
        if (dropDownVendor.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select the Brand Name!!");
        } else {
            ArrayList<Product> result = prodList.searchProductsByVendorName(dropDownVendor.getSelectedItem().toString(), reqdCategory);
            if (result.isEmpty()) {
                JOptionPane.showMessageDialog(this, "The Product name does not exists!!", "Information", JOptionPane.INFORMATION_MESSAGE);
            } else {
                populateSearchTableByCust(result);
            }
        }
    }//GEN-LAST:event_btnViewProductByVendorNameSearchActionPerformed

    private void btnGenericSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenericSearchActionPerformed
        // TODO add your handling code here:
        String criteria = dropDownGenericSearch.getSelectedItem().toString();
        String enteredValue = "";
        if (criteria.equals("Product Name") || criteria.equals("Product Model")
                || criteria.equals("Product Description Keyword")
                || criteria.equals("Product Benefit Keyword") || criteria.equals("Brand Name")) {
            if (criteria.equals("Product Name") || criteria.equals("Product Model")
                    || criteria.equals("Product Description Keyword")
                    || criteria.equals("Product Benefit Keyword")) {
                enteredValue = txtGenericSearch.getText();
            } else {
                enteredValue = dropDownVendor1.getSelectedItem().toString();
            }

            ArrayList<Product> result = prodList.searchGeneric(criteria,enteredValue,reqdCategory);
            if (result.isEmpty()) {
                JOptionPane.showMessageDialog(this, "The Product name does not exists!!", "Information", JOptionPane.INFORMATION_MESSAGE);
            } else {
                populateSearchTableByCust(result);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select the Search Criteria!!");
        }
    }//GEN-LAST:event_btnGenericSearchActionPerformed

    private void dropDownGenericSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownGenericSearchActionPerformed
        // TODO add your handling code here:
        String criteria = dropDownGenericSearch.getSelectedItem().toString();
        if (criteria.equals("Product Name") || criteria.equals("Product Model")
                || criteria.equals("Product Description Keyword") || criteria.equals("Product Benefit Keyword")) {
            txtGenericSearch.setEnabled(true);
            dropDownVendor1.setEnabled(false);
            lblSelectBrandName.setEnabled(false);
        }
        if (criteria.equals("Brand Name")) {
            dropDownVendor1.setEnabled(true);
            lblSelectBrandName.setEnabled(true);
            txtGenericSearch.setEnabled(false);
        }
    }//GEN-LAST:event_dropDownGenericSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenericSearch;
    private javax.swing.JButton btnViewProduct;
    private javax.swing.JButton btnViewProduct1;
    private javax.swing.JButton btnViewProductByNameSearch;
    private javax.swing.JButton btnViewProductByVendorNameSearch;
    private javax.swing.JComboBox<String> dropDownGenericSearch;
    private javax.swing.JComboBox<String> dropDownVendor;
    private javax.swing.JComboBox<String> dropDownVendor1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblSelectBrandName;
    private javax.swing.JTable tblDisplayProducts;
    private javax.swing.JTextField txtGenericSearch;
    private javax.swing.JTextField txtViewProductByNameSearch;
    // End of variables declaration//GEN-END:variables
}
