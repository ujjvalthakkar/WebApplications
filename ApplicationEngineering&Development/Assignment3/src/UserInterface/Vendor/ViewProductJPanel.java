/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Vendor;

import Business.Product;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Ujjval
 */
public class ViewProductJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewProductJPanel
     */
    Product product;
    private JPanel userProcessContainer;

    public ViewProductJPanel(JPanel userProcessContainer, Product p) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.product = p;
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        setFields();
    }

    public void setFields() {
        txtProdName.setText(product.getName());
        txtProdModelNumb.setText(product.getModelNumber());
        lblVendorNameReplace.setText(product.getVendorName());
        txtProdBasePrice.setText(product.getBasePrice());
        txtProdCeildPrice.setText(product.getCeilingPrice());
        txtProdFloorPrice.setText(product.getFloorPrice());
        txtProdDescStatement.setText(product.getDescStatemnt());
        int index = 0;
        String category = product.getCategory();
        if (category.equals("SelectCategory")) {
            index = 0;
        }
        if (category.equals("Computer")) {
            index = 1;
        }
        if (category.equals("Printer")) {
            index = 2;
        }
        if (category.equals("Hardware Part")) {
            index = 3;
        }
        if (category.equals("Software")) {
            index = 4;
        }
        dropDownCategory.setSelectedIndex(index);
        txtProdBenefits.setText(product.getProductBenefits());
        txtProdFeatures.setText(product.getProductFeatures());
    }

    public boolean mandValidations() {
        boolean mandStatus = true;
        if (txtProdName.getText().isEmpty() || txtProdBasePrice.getText().isEmpty() || txtProdCeildPrice.getText().isEmpty()) {
            mandStatus = false;
        }
        if (txtProdDescStatement.getText().isEmpty() || txtProdFloorPrice.getText().isEmpty() || txtProdModelNumb.getText().isEmpty()) {
            mandStatus = false;
        }
        if (dropDownCategory.getSelectedIndex() == 0) {
            mandStatus = false;
        }
        return mandStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        lblProdName = new javax.swing.JLabel();
        lblProdModelNumb = new javax.swing.JLabel();
        lblProdVendorName = new javax.swing.JLabel();
        lblProdDescStmnt = new javax.swing.JLabel();
        lblProdBasePrice = new javax.swing.JLabel();
        lblProdFloorPrice = new javax.swing.JLabel();
        lblProdCeilPrice = new javax.swing.JLabel();
        lblProdFeatures = new javax.swing.JLabel();
        lblProdBenefits = new javax.swing.JLabel();
        lblProdCategory = new javax.swing.JLabel();
        lblVendorNameReplace = new javax.swing.JLabel();
        txtProdName = new javax.swing.JTextField();
        txtProdBasePrice = new javax.swing.JTextField();
        txtProdModelNumb = new javax.swing.JTextField();
        txtProdCeildPrice = new javax.swing.JTextField();
        txtProdFloorPrice = new javax.swing.JTextField();
        dropDownCategory = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtProdFeatures = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtProdBenefits = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtProdDescStatement = new javax.swing.JTextArea();
        lblMandFields = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHeader.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblHeader.setText("View Product");
        add(lblHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));

        lblProdName.setText("Product Name:*");
        add(lblProdName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        lblProdModelNumb.setText("Model Number:*");
        add(lblProdModelNumb, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));

        lblProdVendorName.setText("Vendor Name:");
        add(lblProdVendorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, -1, -1));

        lblProdDescStmnt.setText("Description Statement:*");
        add(lblProdDescStmnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        lblProdBasePrice.setText("Base Price:*");
        add(lblProdBasePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, -1, -1));

        lblProdFloorPrice.setText("Floor Price:*");
        add(lblProdFloorPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, -1, -1));

        lblProdCeilPrice.setText("Ceiling Price:*");
        add(lblProdCeilPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, -1, -1));

        lblProdFeatures.setText("Features:");
        add(lblProdFeatures, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, -1, -1));

        lblProdBenefits.setText("Benefits:");
        add(lblProdBenefits, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, -1, -1));

        lblProdCategory.setText("Category:*");
        add(lblProdCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, -1, -1));

        lblVendorNameReplace.setText("<<Vendor Name will be replaced Here>>");
        add(lblVendorNameReplace, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, -1, -1));

        txtProdName.setEditable(false);
        add(txtProdName, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 121, -1));

        txtProdBasePrice.setEditable(false);
        txtProdBasePrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProdBasePriceKeyTyped(evt);
            }
        });
        add(txtProdBasePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 121, -1));

        txtProdModelNumb.setEditable(false);
        add(txtProdModelNumb, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 121, -1));

        txtProdCeildPrice.setEditable(false);
        txtProdCeildPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProdCeildPriceKeyTyped(evt);
            }
        });
        add(txtProdCeildPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 121, -1));

        txtProdFloorPrice.setEditable(false);
        txtProdFloorPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProdFloorPriceKeyTyped(evt);
            }
        });
        add(txtProdFloorPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 121, -1));

        dropDownCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SelectCategory", "Computer", "Printer", "Hardware Part", "Software" }));
        add(dropDownCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, -1, -1));

        txtProdFeatures.setEditable(false);
        txtProdFeatures.setColumns(20);
        txtProdFeatures.setRows(5);
        jScrollPane1.setViewportView(txtProdFeatures);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, 205, 69));

        txtProdBenefits.setEditable(false);
        txtProdBenefits.setColumns(20);
        txtProdBenefits.setRows(5);
        jScrollPane2.setViewportView(txtProdBenefits);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 160, 205, 69));

        txtProdDescStatement.setEditable(false);
        txtProdDescStatement.setColumns(20);
        txtProdDescStatement.setRows(5);
        jScrollPane3.setViewportView(txtProdDescStatement);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 205, 69));

        lblMandFields.setText("Fields marked (*) are mandatory");
        lblMandFields.setEnabled(false);
        add(lblMandFields, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 420, -1, -1));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtProdBasePriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdBasePriceKeyTyped
        // TODO add your handling code here:
        char charEntered = evt.getKeyChar();
        // Allows only numbers,'.' ,backspace and Delete
        if ((!Character.isDigit(charEntered)) || (charEntered == '.') || (charEntered == KeyEvent.VK_BACK_SPACE) || (charEntered == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtProdBasePriceKeyTyped

    private void txtProdCeildPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdCeildPriceKeyTyped
        // TODO add your handling code here:
        char charEntered = evt.getKeyChar();
        // Allows only numbers,'.' ,backspace and Delete
        if ((!Character.isDigit(charEntered)) || (charEntered == '.') || (charEntered == KeyEvent.VK_BACK_SPACE) || (charEntered == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtProdCeildPriceKeyTyped

    private void txtProdFloorPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdFloorPriceKeyTyped
        // TODO add your handling code here:
        char charEntered = evt.getKeyChar();
        // Allows only numbers,'.' ,backspace and Delete
        if ((!Character.isDigit(charEntered)) || (charEntered == '.') || (charEntered == KeyEvent.VK_BACK_SPACE) || (charEntered == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtProdFloorPriceKeyTyped

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        lblMandFields.setEnabled(true);
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
        txtProdName.setEditable(true);
        txtProdModelNumb.setEditable(true);
        txtProdBasePrice.setEditable(true);
        txtProdCeildPrice.setEditable(true);
        txtProdFloorPrice.setEditable(true);
        txtProdDescStatement.setEditable(true);
        dropDownCategory.setEditable(true);
        txtProdBenefits.setEditable(true);
        txtProdFeatures.setEditable(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] compArray = userProcessContainer.getComponents();
        Component component = compArray[compArray.length - 1];
        ViewProductsJPanel panel = (ViewProductsJPanel) component;
        panel.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (mandValidations() == true) {
            product.setName(txtProdName.getText());
            product.setModelNumber(txtProdModelNumb.getText());
            product.setVendorName(product.getVendorName());
            product.setBasePrice(txtProdBasePrice.getText());
            product.setCeilingPrice(txtProdCeildPrice.getText());
            product.setFloorPrice(txtProdFloorPrice.getText());
            product.setDescStatemnt(txtProdDescStatement.getText());
            product.setCategory(dropDownCategory.getSelectedItem().toString());
            product.setProductBenefits(txtProdBenefits.getText());
            product.setProductFeatures(txtProdFeatures.getText());
            btnSave.setEnabled(false);
            btnUpdate.setEnabled(true);
            txtProdName.setEditable(false);
            txtProdModelNumb.setEditable(false);
            txtProdBasePrice.setEditable(false);
            txtProdCeildPrice.setEditable(false);
            txtProdFloorPrice.setEditable(false);
            txtProdDescStatement.setEditable(false);
            dropDownCategory.setEditable(false);
            txtProdBenefits.setEditable(false);
            txtProdFeatures.setEditable(false);
            JOptionPane.showMessageDialog(this, "The Product was Updated successfully!!", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Please enter all the mandatory fields!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> dropDownCategory;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblMandFields;
    private javax.swing.JLabel lblProdBasePrice;
    private javax.swing.JLabel lblProdBenefits;
    private javax.swing.JLabel lblProdCategory;
    private javax.swing.JLabel lblProdCeilPrice;
    private javax.swing.JLabel lblProdDescStmnt;
    private javax.swing.JLabel lblProdFeatures;
    private javax.swing.JLabel lblProdFloorPrice;
    private javax.swing.JLabel lblProdModelNumb;
    private javax.swing.JLabel lblProdName;
    private javax.swing.JLabel lblProdVendorName;
    private javax.swing.JLabel lblVendorNameReplace;
    private javax.swing.JTextField txtProdBasePrice;
    private javax.swing.JTextArea txtProdBenefits;
    private javax.swing.JTextField txtProdCeildPrice;
    private javax.swing.JTextArea txtProdDescStatement;
    private javax.swing.JTextArea txtProdFeatures;
    private javax.swing.JTextField txtProdFloorPrice;
    private javax.swing.JTextField txtProdModelNumb;
    private javax.swing.JTextField txtProdName;
    // End of variables declaration//GEN-END:variables
}
